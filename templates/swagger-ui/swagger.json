{
  "openapi": "3.0.0",
  "components": {
      "securitySchemes": {
          "BearerAuth": {
              "type": "http",
              "scheme": "bearer"
          }
      }
  },
  "security": [
      {
          "BearerAuth": []
      }
  ],
  "info": {
      "version": "2.0.0",
      "title": "CSM"
  },
  "servers": [
      {
          "url": "/api/v2"
      },
      {
          "url": "/api/v1"
      }
  ],
  "paths": {
      "/login": {
          "post": {
              "tags": [
                  "User"
              ],
              "summary": "This API allow login to CSM user",
              "security": [],
              "responses": {
                  "200": {
                      "description": "OK: User logged in successfully."
                  },
                  "400": {
                      "description": "Bad Request: Request body is missing or Username or password is missing"
                  },
                  "401": {
                      "description": "Unauthorized: Username and password combination is incorrect"
                  },
                  "422": {
                      "description": "Unprocessable Entity: server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions."
                  },
                  "499": {
                      "description": "Call Cancelled: Call cancelled by client."
                  },
                  "500": {
                      "description": "Internal Server Error: When requested resource is not available."
                  }
              },
              "requestBody": {
                  "description": "CSM User request",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "username": {
                                      "type": "string",
                                      "example": ""
                                  },
                                  "password": {
                                      "type": "string",
                                      "example": ""
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/logout": {
          "post": {
              "tags": [
                  "User"
              ],
              "summary": "This API is allow to logout the user",
              "responses": {
                  "200": {
                      "description": "OK: User logout successfully."
                  },
                  "400": {
                      "description": "Bad Request: This error is raised for all cases when an entity was not found"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "422": {
                      "description": "Unprocessable Entity: server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions."
                  },
                  "499": {
                      "description": "Call Cancelled: Call cancelled by client."
                  },
                  "500": {
                      "description": "Internal Server Error: When requested resource is not available."
                  }
              },
              "content": {
                  "application/json": {}
              }
          }
      },
      "/system/users": {
          "get": {
              "tags": [
                  "CSM User"
              ],
              "summary": "Get CSM user list: CSM user having permission manage and monitor can get CSM users list",
              "responses": {
                  "200": {
                      "description": "OK: List of CSM users"
                  },
                  "400": {
                      "description": "Bad Request: Invalid request URL."
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "499": {
                      "description": "Call Cancelled: Call cancelled by client."
                  },
                  "500": {
                      "description": "Internal Server Error: When requested resource is not available."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "in": "query",
                      "name": "sortby",
                      "schema": {
                          "type": "string"
                      },
                      "description": "The field_id of the column that you wish to sort.",
                      "example": "email"
                  },
                  {
                      "in": "query",
                      "name": "dir",
                      "schema": {
                          "type": "string",
                          "enum": [
                              "asc",
                              "desc"
                          ]
                      },
                      "description": "This value denotes the direction of sorting.",
                      "example": "asc"
                  },
                  {
                      "in": "query",
                      "name": "Filter field_id and search phrase",
                      "schema": {
                          "type": "object"
                      },
                      "description": "Field_id of the column as key and the search phrase as value can be mentioned.",
                      "example": "{\n  \"role\": \"admin\"\n}"
                  }
              ]
          },
          "post": {
              "tags": [
                  "CSM User"
              ],
              "summary": "Create new CSM user: CSM user having permission admin or manage can create new CSM user",
              "responses": {
                  "201": {
                      "description": "User has been created"
                  },
                  "400": {
                      "description": "Bad Request: Request body is missing or Invalid arguments"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "422": {
                      "description": "Unprocessable Entity: server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions."
                  },
                  "499": {
                      "description": "Call Cancelled: Call cancelled by client."
                  },
                  "500": {
                      "description": "Internal Server Error: When requested resource is not available."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "requestBody": {
                  "description": "Create new user request",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "username": {
                                      "type": "string",
                                      "example": "Test2"
                                  },
                                  "password": {
                                      "type": "string",
                                      "example": "password"
                                  },
                                  "email": {
                                      "type": "string",
                                      "example": "user@test.com"
                                  },
                                  "role": {
                                      "type": "string",
                                      "enum": [
                                          "admin",
                                          "manage",
                                          "monitor"
                                      ],
                                      "example": "manage"
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/system/users/{user_id}": {
          "get": {
              "tags": [
                  "CSM User"
              ],
              "summary": "Get CSM user: CSM user having permission manage and monitor can fetch CSM user info by ID",
              "responses": {
                  "200": {
                      "description": "OK: CSM user info fetched successfully"
                  },
                  "400": {
                      "description": "Bad Request : Request body missing or S3 account with same name as passed CSM username already exists"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "404": {
                      "description": "This error is raised for all cases when we don't have permissions"
                  },
                  "499": {
                      "description": "Call Cancelled: Call cancelled by client."
                  },
                  "500": {
                      "description": "Internal Server Error: When requested resource is not available."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "user_id",
                      "in": "path",
                      "description": "Specifies the user id",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          },
          "patch": {
              "tags": [
                  "CSM User"
              ],
              "summary": "Update CSM user credentials: CSM user having permission manage can update CSM user",
              "responses": {
                  "200": {
                      "description": "OK: User updated successfully"
                  },
                  "400": {
                      "description": "Bad Request: Request body missing or Invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "404": {
                      "description": "No Data Found: A specified resource could not be found."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "user_id",
                      "in": "path",
                      "description": "Specifies the user id",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Edit CSM user credentials. The 'current_password' property is required for users who change their own password. The superuser can skip this field for all other users.",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": false,
                              "properties": {
                                  "role": {
                                      "type": "string",
                                      "enum": [
                                          "admin",
                                          "manage",
                                          "monitor"
                                      ],
                                      "example": "manage"
                                  },
                                  "email": {
                                      "type": "string",
                                      "example": "new@email.com"
                                  },
                                  "password": {
                                      "type": "string",
                                      "example": "new_password"
                                  },
                                  "current_password": {
                                      "type": "string",
                                      "example": "password"
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "CSM User"
              ],
              "summary": "Delete csm user: CSM user having permission manage can delete existing CSM user",
              "responses": {
                  "200": {
                      "description": "Ok"
                  },
                  "400": {
                      "description": "Bad Request: Request body missing or Invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "404": {
                      "description": "No Data Found: Users Not Found"
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "user_id",
                      "in": "path",
                      "description": "Specifies the user id",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          }
      },
      "/iam/users": {
          "post": {
              "tags": [
                  "IAM User"
              ],
              "summary": "This API allow csm users with admin and manage role to create an IAM user.",
              "responses": {
                  "201": {
                      "description": "OK:Request has succeeded and has led to the creation of a resource."
                  },
                  "400": {
                      "description": "MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "PermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "409": {
                      "description": "UserAlreadyExists: Attempt to create existing user"
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "requestBody": {
                  "description": "CSM User request",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "uid": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  },
                                  "display_name": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  },
                                  "email": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "key_type": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "access_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "secret_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "user_caps": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "generate_key": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  },
                                  "max_buckets": {
                                      "type": "integer",
                                      "example": "",
                                      "required": false
                                  },
                                  "suspended": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  },
                                  "tenant": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/iam/users/{uid}": {
          "get": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Using this Management API, csm users with admin, manage, monitor role can fetch an IAM user by uid",
              "responses": {
                  "200": {
                      "description": "OK: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "503": {
                      "description": "Service Unavailable: Service is not available at the moment or unable to connect to service."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "The user ID to be created.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          },
          "patch": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Using this Management API, Admin and Manager users can modify IAM user information.",
              "responses": {
                  "200": {
                      "description": "OK:Request has succeeded and has led to the updation of a resource."
                  },
                  "400": {
                      "description": "MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions."
                  },
                  "409": {
                      "description": "Conflict: Provided access key exists or email belongs to another user."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "The user ID to be updated.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "requestBody": {
                  "description": "Modify IAM user information",
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": false,
                              "properties": {
                                  "display_name ": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "email": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "key_type": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "acess_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "secret_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "generate_key": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  },
                                  "max_buckets": {
                                      "type": "integer",
                                      "required": false
                                  },
                                  "suspended": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  },
                                  "op_mask": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Using this Management API, csm users with admin and manage role can delete an existing iam user.",
              "responses": {
                  "200": {
                      "description": "Ok: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": " Forbidden: DataPermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "404": {
                      "description": "No Found: NoSuchUser: User does not exist. "
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable: DataPermissionDenied: Service is not available at the moment or unable to connect to service."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "The user ID to be deleted.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          }
      },
      "/iam/keys": {
          "put": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Create a new key. If only one of access_key or secret_key is provided the committed key will be automatically generated",
              "responses": {
                  "200": {
                      "description": "OK: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "Forbidden: PermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "409": {
                      "description": "Conflict:KeyExists:Provided access key exists and belongs to another user."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "requestBody": {
                  "description": "CSM User request",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "uid": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  },
                                  "key_type": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "acsess_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "secret_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "generate_key": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  }
                              }
                          }
                      }
                  }
              }
          },
          "delete": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Remove Access Key",
              "responses": {
                  "200": {
                      "description": "Ok"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": " Forbidden: DataPermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable: DataPermissionDenied: Service is not available at the moment or unable to connect to service."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "requestBody": {
                  "description": "Delete access key",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "uid": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "key_type": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  },
                                  "acsess_key": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  }
                              }
                          }
                      }
                  }
              }
          }
      },
      "/iam/caps/{uid}": {
          "put": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Add an administrative capability to a specified user.",
              "responses": {
                  "200": {
                      "description": "OK: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "Forbidden: PermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "requestBody": {
                  "description": "The administrative capabilities to add from the user.",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "user_caps": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  }
                              }
                          }
                      }
                  }
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "The user ID to add an administrative capability to.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          },
          "delete": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Remove an administrative capability from a specified user.",
              "responses": {
                  "200": {
                      "description": "Ok: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": " Forbidden: DataPermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "404": {
                      "description": "No Found: NoSuchUser: User does not exist. "
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable: DataPermissionDenied: Service is not available at the moment or unable to connect to service."
                  }
              },
              "content": {
                  "application/json": {}
              },
              "requestBody": {
                  "description": "Remove an administrative capability from a specified user.",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": true,
                              "properties": {
                                  "user_caps": {
                                      "type": "string",
                                      "example": "",
                                      "required": true
                                  }
                              }
                          }
                      }
                  }
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "The user ID from an administrative capability need to remove",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          }
      },
      "/iam/quota/{uid}": {
          "put": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Set user quota REST API can be used to set user quota of specific IAM user. admin and manage role can perform operation",
              "responses": {
                  "200": {
                      "description": "OK: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "Forbidden: PermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "requestBody": {
                  "description": "Delete access key",
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "type": "object",
                              "required": false,
                              "properties": {
                                  "enabled": {
                                      "type": "boolean",
                                      "example": "",
                                      "required": false
                                  },
                                  "max_size": {
                                      "type": "integer",
                                      "example": "",
                                      "required": false
                                  },
                                  "max_object": {
                                      "type": "integer",
                                      "example": "",
                                      "required": false
                                  },
                                  "check_on_raw": {
                                      "type": "string",
                                      "example": "",
                                      "required": false
                                  }
                              }
                          }
                      }
                  }
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "User Id of the IAM user for which user level quota needs to be set.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          },
          "get": {
              "tags": [
                  "IAM User"
              ],
              "summary": "Get user quota of specific IAM user.CSM users with admin, manage and monitor role are allowed to perform this operation.",
              "responses": {
                  "200": {
                      "description": "OK: Indicates that the request has succeeded."
                  },
                  "400": {
                      "description": "Bad Request: MalformedRequest: Request body is missing or invalid request body"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid token format or session is invalid."
                  },
                  "403": {
                      "description": "Forbidden: PermissionDenied: CSM user does not have the permission to perform operation."
                  },
                  "500": {
                      "description": "Internal Server Error: Unknown error occurred."
                  },
                  "503": {
                      "description": "Service Unavailable:Internal Server Error: Service is not available at the moment or unable to connect to service."
                  }
              },
              "parameters": [
                  {
                      "name": "uid",
                      "in": "path",
                      "description": "Fetch user quota based of given user id.",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ]
          }
      },
      "/capacity/status/{resource}": {
          "get": {
              "tags": [
                  "Storage Capacity"
              ],
              "summary": " Get degraded capacity in bytes count.",
              "responses": {
                  "200": {
                      "description": "OK"
                  },
                  "401": {
                      "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                  },
                  "403": {
                      "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                  },
                  "503": {
                      "description": "Unable to connect to the service"
                  },
                  "500": {
                      "description": "Internal Server Error"
                  }
              },
              "content": {
                  "application/json": {}
              },
              "parameters": [
                  {
                      "name": "resource",
                      "in": "path",
                      "description": "Fetch user quota based of given user id.",
                      "required": false,
                      "schema": {
                          "type": "string"
                      },
                      "example": "bytecount"
                  }
              ]
          }
      },
      "/capacity/s3/{resource}/{id}": {
          "get": {
            "tags": [
                "Storage Capacity"
            ],
            "summary": "Get user level Capacity usage statistics.",
            "responses": {
                "200": {
                    "description": "OK"
                },
                "401": {
                    "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                },
                "403": {
                    "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                },
                "503": {
                    "description": "Unable to connect to the service"
                },
                "500": {
                    "description": "Internal Server Error"
                }
            },
            "content": {
                "application/json": {}
            },
            "parameters": [
                {
                    "name": "resource",
                    "in": "path",
                    "description": "The resource whose capacity usage need to check.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "user"
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Get capacity usage by user id",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": ""
                }
            ]
          }
      },
      "/system/management/{resource}":{
          "POST": {
            "tags": [
                "Cluster Management"
            ],
            "summary": "Sends cluster shutdown signal.",
            "responses": {
                "200": {
                    "description": "OK"
                },
                "401": {
                    "description": "Unauthorized: Token has not found or invalid format or session is invalid"
                },
                "403": {
                    "description": "Forbidden: This error is raised for all cases when user don't have permissions"
                },
                "503": {
                    "description": "Unable to connect to the service"
                },
                "500": {
                    "description": "Internal Server Error"
                }
            },
            "content": {
                "application/json": {}
            },
            "requestBody": {
                "description": "Perform operation for specified resource.",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": true,
                            "properties": {
                                "operation": {
                                    "type": "string",
                                    "example": "shutdown_signal",
                                    "required": true
                                },
                                "arguments": {
                                    "type": "object",
                                    "example": {},
                                    "required": true
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "resource",
                    "in": "path",
                    "description": "Perform operation based on resource.",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "example": "cluster"
                }
            ]
          }
      }
  }
}